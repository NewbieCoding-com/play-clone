[package]
name = "client"
version = "0.1.0"
edition = "2021"

## if wasm-opt not supported on a machine , uncomment below code to disable it.
[package.metadata.wasm-pack.profile.release]
wasm-opt=false

#[profile.release]
## Tell `rustc` to optimize for small code size.
#opt-level = "s"

[features]
dev=[]
prod=[]

[lib]
crate-type = ["cdylib"]

[dependencies]
wasm-bindgen = { version = "0.2.88" }
wasm-bindgen-futures = "0.4.38"
js-sys = "0.3"
reqwest = { version = "0.11.22", features = ["json"] }
anyhow = "1.0.75"
shared={path = "../shared",features = ["wasm"]}
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
serde = { version = "1.0.192", features = ["derive"] }
serde-wasm-bindgen = "0.6.1"


[dependencies.web-sys]
version = "0.3.4"
features = [
    'Document',
    'Element',
    'Blob',
    'HtmlElement',
    'Node',
    'Window',
    'HtmlCanvasElement',
    'FileList',
    'File',
    'HtmlInputElement',
    'AudioContext',
    'CanvasRenderingContext2d',
    'AudioBuffer',
    'AudioBufferSourceNode',
    'AnalyserNode',
    'AudioDestinationNode',
]